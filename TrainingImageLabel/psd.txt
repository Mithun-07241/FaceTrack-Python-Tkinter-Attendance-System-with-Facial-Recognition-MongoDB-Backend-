2d array using dynamic memory:
	
=> memory managme.. of 2d array:
		
		*) the 2d array creates an extra array 1d array based on the number of rows... 
		*) create a pointer array first...(stores the base address of each 1d array) 
													         note :   &a[i][j] => *(a+i)+j
														 	  a[i][j] => *(*(a+i)+j)
		*) the indices are are marked as 0,0 0,1 0,2...(1st 1d array)taken as 0
						 1,0 1,1 1,2...(2nd 1d array)taken as 1
						 etc
						 .
						 .

		*) the address are taken into consideration...

		*) in dynamic 2d array the pointer array remains in stack mem...but in static 2d array the pointer and the other 1d array are in same mem...




Example:

	#include<stdio.h>
	#include<stdlib.h>
	int main(){
		int r,c,i,j;
		printf("rows and column");
		scanf("%d %d",&r,&c):
		int** a=(int**)malloc(r*sizeof(int));
		for(i=0;i<r;i++){
			*(a+i)=(int*)malloc(c*sizeof(int));
		}
		printf("enter the elements");
		for(i=0;i<r;i++){
			for(j=0;j<c;j++){
				scanf("%d",*(a+i)+j);
			}
		}
		printf("Matrix");
		for(i=0;i<r;i++,printf("\n")){
			for(j=0;j<c;j++){
				printf("%d",*(*(a+i)+j));
			}
		}
		retun 0;
	}
	
		
		